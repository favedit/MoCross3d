#include "MoCmModule.h"
#include "MoCmClass.h"

MO_NAMESPACE_BEGIN

MO_CLASS_IMPLEMENT_INHERITS(FConsole, FInstance);

//============================================================
// <T>构造唯一对象的实例。</T>
//
// @return 实例
//============================================================
FConsole::FConsole(){
   _code = 0;
}

//============================================================
// <T>析构唯一对象的实例。</T>
//============================================================
FConsole::~FConsole(){
}

//============================================================
// <T>构造类对象。</T>
//
// @return 处理结果
//============================================================
TResult FConsole::Construct(){
   return ESuccess;
}

//============================================================
// <T>释放类对象。</T>
//
// @return 处理结果
//============================================================
TResult FConsole::Dispose(){
   return ESuccess;
}

//============================================================
// <T>获得唯一对象的类型。</T>
//
// @return 类型
//============================================================
ESingleton FConsole::SingletonType(){
   return ESingleton_Manager;
}

//============================================================
// <T>获得唯一对象的代码。</T>
//
// @return 代码
//============================================================
TInt FConsole::Code(){
   return _code;
}

//============================================================
// <T>获得唯一对象的名称。</T>
//
// @return 名称
//============================================================
TCharC* FConsole::Name(){
   return _name.MemoryC();
}

//============================================================
// <T>序列化管理器。</T>
//
// @return 处理结果
//============================================================
TResult FConsole::OnSerialize(){
   return ESuccess;
}

//============================================================
// <T>反序列化管理器。</T>
//
// @return 处理结果
//============================================================
TResult FConsole::OnUnserialize(){
   return ESuccess;
}

//============================================================
// <T>获得唯一对象的名称。</T>
//
// @param pConfig 设置信息
// @return 处理结果
//============================================================
TResult FConsole::LoadConfig(FXmlNode* pConfig){
   return ESuccess;
}

//============================================================
// <T>挂起管理器。</T>
//
// @return 处理结果
//============================================================
TResult FConsole::Suspend(){
   return OnSerialize();
}

//============================================================
// <T>唤醒管理器。</T>
//
// @return 处理结果
//============================================================
TResult FConsole::Resume(){
   return OnUnserialize();
}

MO_NAMESPACE_END
