#include "MoCmFormat.h"
#include "MoCmLanguage.h"

MO_NAMESPACE_BEGIN

//============================================================
// <T>构造整数字符串。</T>
//============================================================
TFsInteger::TFsInteger(){
   Set(0);
}

//============================================================
// <T>构造整数字符串。</T>
//
// @param value 整数
//============================================================
TFsInteger::TFsInteger(TInt value){
   Set(value);
}

//============================================================
// <T>构造整数字符串。</T>
//
// @param pValue 字符串
//============================================================
TFsInteger::TFsInteger(TCharC* pValue){
   Parse(pValue);
}

//============================================================
// <T>构造整数字符串。</T>
//
// @param ptr 字符串指针
//============================================================
TFsInteger::TFsInteger(const TStringPtrC& ptr){
   Parse(ptr.MemoryC());
}

//============================================================
// <T>构造整数字符串。</T>
//
// @param value 整数字符串
//============================================================
TFsInteger::TFsInteger(const TFsInteger& value){
   Parse(value.MemoryC());
}

//============================================================
// <T>赋值操作。</T>
//
// @param value 整数
//============================================================
void TFsInteger::operator=(TInt value){
   Set(value);
}

//============================================================
// <T>赋值操作。</T>
//
// @param pValue 字符串
//============================================================
void TFsInteger::operator=(TCharC* pValue){
   Parse(pValue);
}

//============================================================
// <T>赋值操作。</T>
//
// @param ptr 字符串指针
//============================================================
void TFsInteger::operator=(const TStringPtrC& ptr){
   Parse(ptr.MemoryC());
}

//============================================================
// <T>赋值操作。</T>
//
// @param value 整数字符串
//============================================================
void TFsInteger::operator=(const TFsInteger& value){
   Parse(value.MemoryC());
}

//============================================================
// <T>获得整数内容。</T>
//
// @return 整数
//============================================================
TInt TFsInteger::Get(){
   return _value;
}

//============================================================
// <T>设置整数内容。</T>
//
// @param value 整数
//============================================================
void TFsInteger::Set(TInt value){
   _value = value;
   RInt::ToString(_value, _memory, _capacity);
   Fix();
}

//============================================================
// <T>从字符串解析整数内容。</T>
//
// @return 整数
//============================================================
TInt TFsInteger::Parse(){
   return RInt::Parse(_memory);
}

//============================================================
// <T>从字符串解析整数内容。</T>
//
// @param pValue 字符串
// @return 整数
//============================================================
TInt TFsInteger::Parse(TCharC* pValue){
   _value = RInt::Parse(pValue);
   Assign(pValue);
   return _value;
}

//============================================================
// <T>返回字符串。</T>
//
// @return 字符串
//============================================================
TCharC* TFsInteger::ToString(){
   return RInt::ToString(_value, _memory, _capacity);
}

MO_NAMESPACE_END
