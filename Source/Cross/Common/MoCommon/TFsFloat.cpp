#include "MoCmFormat.h"
#include "MoCmLanguage.h"

MO_NAMESPACE_BEGIN

//============================================================
// <T>构造浮点数字符串。</T>
//============================================================
TFsFloat::TFsFloat(){
   Set(0.0f);
}

//============================================================
// <T>构造浮点数字符串。</T>
//
// @param value 浮点数
//============================================================
TFsFloat::TFsFloat(TFloat value){
   Set(value);
}

//============================================================
// <T>构造浮点数字符串。</T>
//
// @param pValue 字符串
//============================================================
TFsFloat::TFsFloat(TCharC* pValue){
   Parse(pValue);
}

//============================================================
// <T>构造浮点数字符串。</T>
//
// @param ptr 字符串指针
//============================================================
TFsFloat::TFsFloat(const TStringPtrC& ptr){
   Parse(ptr.MemoryC());
}

//============================================================
// <T>构造浮点数字符串。</T>
//
// @param value 浮点数字符串
//============================================================
TFsFloat::TFsFloat(const TFsFloat& value){
   Parse(value.MemoryC());
}

//============================================================
// <T>赋值操作。</T>
//
// @param value 浮点数
//============================================================
void TFsFloat::operator=(TFloat value){
   Set(value);
}

//============================================================
// <T>赋值操作。</T>
//
// @param pValue 字符串
//============================================================
void TFsFloat::operator=(TCharC* pValue){
   Parse(pValue);
}

//============================================================
// <T>赋值操作。</T>
//
// @param ptr 字符串指针
//============================================================
void TFsFloat::operator=(const TStringPtrC& ptr){
   Parse(ptr.MemoryC());
}

//============================================================
// <T>赋值操作。</T>
//
// @param value 浮点数字符串
//============================================================
void TFsFloat::operator=(const TFsFloat& value){
   Parse(value.MemoryC());
}

//============================================================
// <T>获得浮点数内容。</T>
//
// @return 浮点数
//============================================================
TFloat TFsFloat::Get(){
   return _value;
}

//============================================================
// <T>设置浮点数内容。</T>
//
// @param value 浮点数
//============================================================
void TFsFloat::Set(TFloat value){
   _value = value;
   RFloat::ToString(value, _memory, _capacity);
   Fix();
}

//============================================================
// <T>从字符串解析浮点数内容。</T>
//
// @return 浮点数
//============================================================
TFloat TFsFloat::Parse(){
   return RFloat::Parse(_memory);
}

//============================================================
// <T>从字符串解析浮点数内容。</T>
//
// @param pValue 字符串
// @return 浮点数
//============================================================
TFloat TFsFloat::Parse(TCharC* pValue){
   _value = RFloat::Parse(pValue);
   Assign(pValue);
   return _value;
}

//============================================================
// <T>返回字符串。</T>
//
// @return 字符串
//============================================================
TCharC* TFsFloat::ToString(){
   return RFloat::ToString(_value, _memory, _capacity);
}

MO_NAMESPACE_END
