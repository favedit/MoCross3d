#include "MoCrService.h"

MO_NAMESPACE_BEGIN

//============================================================
// <T>构造服务的实例。</T>
//
// @return 服务的实例
//============================================================
FService::FService(){
   _code = 0;
}

//============================================================
// <T>析构服务的实例。</T>
//============================================================
FService::~FService(){
}

//============================================================
// <T>构造处理。</T>
//
// @return 处理结果
//============================================================
TResult FService::Construct(){
   return ESuccess;
}

//============================================================
// <T>析构处理。</T>
//
// @return 处理结果
//============================================================
TResult FService::Dispose(){
   return ESuccess;
}

//============================================================
// <T>处理服务加载设置事件。</T>
//
// @param pConfig 设置信息
// @return 处理结果
//============================================================
TResult FService::OnLoadConfig(FXmlNode* pConfig){
   return ESuccess;
}

//============================================================
// <T>处理服务状态改变事件。</T>
//
// @param status 状态
// @return 处理结果
//============================================================
TResult FService::OnStatus(TInt status){
   return ESuccess;
}

//============================================================
// <T>处理服务命令事件。</T>
//
// @param status 命令
// @param pArguments 参数
// @return 处理结果
//============================================================
TResult FService::OnCommand(TInt command, TAny* pArguments){
   return ESuccess;
}

//============================================================
// <T>处理服务启动事件。</T>
//
// @return 处理结果
//============================================================
TResult FService::OnStartup(){
   return ESuccess;
}

//============================================================
// <T>处理服务挂起事件。</T>
//
// @return 处理结果
//============================================================
TResult FService::OnSuspend(){
   return ESuccess;
}

//============================================================
// <T>处理服务唤醒事件。</T>
//
// @return 处理结果
//============================================================
TResult FService::OnResume(){
   return ESuccess;
}

//============================================================
// <T>处理操作。</T>
//
// @return 处理结果
//============================================================
TResult FService::OnProcess(){
   return ESuccess;
}

//============================================================
// <T>处理服务关闭事件。</T>
//
// @return 处理结果
//============================================================
TResult FService::OnShutdown(){
   return ESuccess;
}

//============================================================
// <T>获得唯一对象的类型。</T>
//
// @return 类型
//============================================================
ESingleton FService::SingletonType(){
   return ESingleton_Manager;
}

//============================================================
// <T>获得唯一对象的代码。</T>
//
// @return 代码
//============================================================
TInt FService::Code(){
   return _code;
}

//============================================================
// <T>获得唯一对象的名称。</T>
//
// @return 名称
//============================================================
TCharC* FService::Name(){
   return _name.MemoryC();
}

//============================================================
// <T>加载设置信息。</T>
//
// @param pConfig 设置信息
// @return 处理结果
//============================================================
TResult FService::LoadConfig(FXmlNode* pConfig){
   MO_ASSERT(pConfig);
   return OnLoadConfig(pConfig);
}

//============================================================
// <T>服务状态改变。</T>
//
// @param status 状态
// @return 处理结果
//============================================================
TResult FService::DoStatus(TInt status){
   return OnStatus(status);
}

//============================================================
// <T>服务命令。</T>
//
// @param status 命令
// @param pArguments 参数
// @return 处理结果
//============================================================
TResult FService::DoCommand(TInt command, TAny* pArguments){
   return OnCommand(command, pArguments);
}

//============================================================
// <T>启动服务。</T>
//
// @return 处理结果
//============================================================
TResult FService::Startup(){
   return OnStartup();
}

//============================================================
// <T>挂起服务。</T>
//
// @return 处理结果
//============================================================
TResult FService::Suspend(){
   return OnSuspend();
}

//============================================================
// <T>唤醒服务。</T>
//
// @return 处理结果
//============================================================
TResult FService::Resume(){
   return OnResume();
}

//============================================================
// <T>处理服务。</T>
//
// @return 处理结果
//============================================================
TResult FService::Process(){
   return OnProcess();
}

//============================================================
// <T>停止服务。</T>
//
// @return 处理结果
//============================================================
TResult FService::Shutdown(){
   return OnShutdown();
}

MO_NAMESPACE_END
