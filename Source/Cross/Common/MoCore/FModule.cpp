#include "MoCrModule.h"

MO_NAMESPACE_BEGIN

//============================================================
// <T>构造唯一对象的实例。</T>
//
// @return 实例
//============================================================
FModule::FModule(){
   _code = 0;
}

//============================================================
// <T>析构唯一对象的实例。</T>
//============================================================
FModule::~FModule(){
}

//============================================================
// <T>构造处理。</T>
//
// @return 处理结果
//============================================================
TResult FModule::Construct(){
   return ESuccess;
}

//============================================================
// <T>析构处理。</T>
//
// @return 处理结果
//============================================================
TResult FModule::Dispose(){
   return ESuccess;
}

//============================================================
// <T>加载设置信息。</T>
//
// @param pConfig 设置信息
// @return 处理结果
//============================================================
TResult FModule::OnLoadConfig(FXmlNode* pConfig){
   return ESuccess;
}

//============================================================
// <T>开始初始化事件。</T>
//
// @return 处理结果
//============================================================
TResult FModule::OnInitialize(){
   return ESuccess;
}

//============================================================
// <T>重新加载事件。</T>
//
// @return 处理结果
//============================================================
TResult FModule::OnReload(){
   return ESuccess;
}

//============================================================
// <T>数据卸载事件。</T>
//
// @return 处理结果
//============================================================
TResult FModule::OnUnload(){
   return ESuccess;
}

//============================================================
// <T>释放初始化事件。</T>
//
// @return 处理结果
//============================================================
TResult FModule::OnRelease(){
   return ESuccess;
}

//============================================================
// <T>序列化事件。</T>
//
// @return 处理结果
//============================================================
TResult FModule::OnSerialize(){
   return ESuccess;
}

//============================================================
// <T>反序列化事件。</T>
//
// @return 处理结果
//============================================================
TResult FModule::OnUnserialize(){
   return ESuccess;
}

//============================================================
// <T>获得唯一对象的类型。</T>
//
// @return 类型
//============================================================
ESingleton FModule::SingletonType(){
   return ESingleton_Manager;
}

//============================================================
// <T>获得唯一对象的代码。</T>
//
// @return 代码
//============================================================
TInt FModule::Code(){
   return _code;
}

//============================================================
// <T>获得唯一对象的名称。</T>
//
// @return 名称
//============================================================
TCharC* FModule::Name(){
   return _name.MemoryC();
}

//============================================================
// <T>加载配置信息。</T>
//
// @param pConfig 配置信息
// @return 处理结果
//============================================================
TResult FModule::LoadConfig(FXmlNode* pConfig){
   return OnLoadConfig(pConfig);
}

//============================================================
// <T>挂起管理器。</T>
//
// @return 处理结果
//============================================================
TResult FModule::Suspend(){
   return OnSerialize();
}

//============================================================
// <T>唤醒管理器。</T>
//
// @return 处理结果
//============================================================
TResult FModule::Resume(){
   return OnUnserialize();
}

//============================================================
// <T>初始化处理。</T>
//
// @return 处理结果
//============================================================
TResult FModule::Initialize(){
   return OnInitialize();
}

//============================================================
// <T>重新加载处理。</T>
//
// @return 处理结果
//============================================================
TResult FModule::Reload(){
   return OnReload();
}

//============================================================
// <T>卸载处理。</T>
//
// @return 处理结果
//============================================================
TResult FModule::Unload(){
   return OnUnload();
}

//============================================================
// <T>释放处理。</T>
//
// @return 处理结果
//============================================================
TResult FModule::Release(){
   return OnRelease();
}

MO_NAMESPACE_END
